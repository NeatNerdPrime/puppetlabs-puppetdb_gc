<%- | Boolean $use_ssl,
      String  $puppetdb_host,
      Integer $puppetdb_port,
      String  $api_command,
      Integer $api_version,
      String  $api_payload,
      String  $postgresql_host,
      Boolean $vacuum_reports,
| -%>

<%
  $prefix = $use_ssl ? {
    true =>  'https',
    false => 'http',
  }
  $curl_command = "curl -X POST ${prefix}://${puppetdb_host}:${puppetdb_port}/pdb/admin/v1/cmd -H 'Accept: application/json' -H 'Content-Type: application/json' -d '{\"command\": \"${api_command}\", \"version\": ${api_version}, \"payload\": [\"${api_payload}\"] }'"

  $cert_path = "/etc/puppetlabs/puppet/ssl/certs/${::clientcert}.pem"
  $privatekey_path = "/etc/puppetlabs/puppet/ssl/private_keys/${::clientcert}.pem"
  $cacert_path = "/etc/puppetlabs/puppet/ssl/certs/ca.pem"

  $curl_certs   = "--cert ${cert_path} --key ${privatekey_path} --cacert ${cacert_path}"

  if $vacuum_reports {
    #psql gives an error if the privatekey isn't 600 or more secure so we just flip it to get psql to run and set it back
    $chmod_600 = "chmod 600 ${privatekey_path}"
    $vacuum_command = "/opt/puppetlabs/server/bin/psql 'user=pe-puppetdb sslcert=${cert_path}  sslkey=${privatekey_path} sslrootcert=${cacert_path} sslmode=verify-ca' -h ${postgresql_host} -c 'VACUUM VERBOSE reports'"
    $chmod_640 = "chmod 640 ${privatekey_path}"
  }

  if $api_payload == 'purge_reports' and $vacuum_reports {
    $final_output = "${curl_command} ${curl_certs}; ${chmod_600}; ${vacuum_command}; ${chmod_640}"
  } else {
    $final_output = "${curl_command} ${curl_certs}"
  }
-%>

<%= $final_output %>
